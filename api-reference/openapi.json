{
  "openapi": "3.1.0",
  "info": {
    "title": "Entirius Product API",
    "description": "E-commerce Product Management API with Pydantic validation and Django Rest Framework",
    "license": {
      "name": "Mozilla Public License 2.0"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://sandbox.mintlify.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "operationId": "list_products",
        "summary": "List all products",
        "description": "Retrieve a list of all products with optional filtering",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Filter by product category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "in_stock",
            "in": "query",
            "description": "Filter by stock availability",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product list response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_product",
        "summary": "Create a new product",
        "description": "Create a new product with Pydantic validation",
        "requestBody": {
          "description": "Product data to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "retrieve_product",
        "summary": "Get product by ID",
        "description": "Retrieve a specific product by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update_product",
        "summary": "Update product",
        "description": "Update an existing product completely",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated product data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update_product",
        "summary": "Partially update product",
        "description": "Partially update an existing product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Partial product data to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_product",
        "summary": "Delete product",
        "description": "Delete a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/products/low_stock": {
      "get": {
        "operationId": "get_low_stock_products",
        "summary": "Get low stock products",
        "description": "Retrieve products with low stock quantity",
        "parameters": [
          {
            "name": "threshold",
            "in": "query",
            "description": "Stock quantity threshold (default: 10)",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Low stock products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "price",
          "sku",
          "category",
          "in_stock",
          "stock_quantity",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the product"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Product name"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "minimum": 0.01,
            "description": "Product price"
          },
          "sku": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Stock Keeping Unit (SKU)"
          },
          "category": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Product category"
          },
          "in_stock": {
            "type": "boolean",
            "description": "Whether the product is in stock"
          },
          "stock_quantity": {
            "type": "integer",
            "minimum": 0,
            "description": "Available stock quantity"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "ProductCreate": {
        "type": "object",
        "required": [
          "name",
          "description",
          "price",
          "sku",
          "category",
          "stock_quantity"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Product name"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "minimum": 0.01,
            "description": "Product price"
          },
          "sku": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Stock Keeping Unit (SKU)"
          },
          "category": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Product category"
          },
          "in_stock": {
            "type": "boolean",
            "default": true,
            "description": "Whether the product is in stock"
          },
          "stock_quantity": {
            "type": "integer",
            "minimum": 0,
            "description": "Available stock quantity"
          }
        }
      },
      "ProductUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Product name"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "minimum": 0.01,
            "description": "Product price"
          },
          "sku": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Stock Keeping Unit (SKU)"
          },
          "category": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Product category"
          },
          "in_stock": {
            "type": "boolean",
            "description": "Whether the product is in stock"
          },
          "stock_quantity": {
            "type": "integer",
            "minimum": 0,
            "description": "Available stock quantity"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}